<%= form_tag({:action => 'edit', :tab => 'repositories'}) do %>

<fieldset class="box settings enabled_scm">
<legend><%= l(:setting_enabled_scm) %></legend>
<%= hidden_field_tag 'settings[enabled_scm][]', '' %>
<table>
  <tr>
    <th></th>
    <th><%= l(:text_scm_command)         %></th>
    <th><%= l(:text_scm_command_version) %></th>
  </tr>
  <% Redmine::Scm::Base.all.collect do |choice| %>
    <% scm_class = "Repository::#{choice}".constantize %>
    <% text, value = (choice.is_a?(Array) ? choice : [choice, choice]) %>
    <% setting = :enabled_scm %>
		<% enabled = Setting.send(setting).include?(value) %>
    <tr>
      <td class="scm_name">
        <label>
        <%= check_box_tag("settings[#{setting}][]", value, enabled, :id => nil) %>
        <%= text.to_s %>
        </label>
      </td>
      <td>
         <% if enabled %>
         <%=
           image_tag(
              (scm_class.scm_available ? 'true.png' : 'exclamation.png'),
              :style => "vertical-align:bottom;"
           )
           %>
          <%= scm_class.scm_command %>
					<% end %>
       </td>
       <td>
          <%= scm_class.scm_version_string if enabled %>
       </td>
     </tr>
  <% end %>
</table>
<p><em class="info"><%= l(:text_scm_config) %></em></p>
</fieldset>

<div class="box tabular settings">
<p><%= setting_check_box :autofetch_changesets %></p>

<p><%= setting_check_box :sys_api_enabled,
                         :onclick =>
                             "if (this.checked) { $('#settings_sys_api_key').removeAttr('disabled'); } else { $('#settings_sys_api_key').attr('disabled', true); }" %></p>

<p><%= setting_text_field :sys_api_key,
                          :size     => 30,
                          :id       => 'settings_sys_api_key',
                          :disabled => !Setting.sys_api_enabled?,
                          :label    => :setting_mail_handler_api_key %>
  <%= link_to_function l(:label_generate_key),
                       "if (!$('#settings_sys_api_key').attr('disabled')) { $('#settings_sys_api_key').val(randomKey(20)) }" %>
</p>

<p><%= setting_text_field :repository_log_display_limit, :size => 6 %></p>
</div>

<fieldset class="box tabular settings">
<legend><%= l(:text_issues_ref_in_commit_messages) %></legend>
<p><%= setting_text_field :commit_ref_keywords, :size => 30 %>
<em class="info"><%= l(:text_comma_separated) %></em></p>

<p><%= setting_text_field :commit_fix_keywords, :size => 30 %>
&nbsp;<%= l(:label_applied_status) %>: <%= setting_select :commit_fix_status_id,
                                                          [["", 0]] +
                                                              IssueStatus.find(:all).collect{
                                                                 |status| [status.name, status.id.to_s]
                                                              },
                                                          :label => false %>
&nbsp;<%= l(:field_done_ratio) %>: <%= setting_select :commit_fix_done_ratio,
                                                       (0..10).to_a.collect {|r| ["#{r*10} %", "#{r*10}"] },
                                                       :blank => :label_no_change_option,
                                                       :label => false %>
<em class="info"><%= l(:text_comma_separated) %></em></p>

<p><%= setting_check_box :commit_cross_project_ref %></p>

<p><%= setting_check_box :commit_logtime_enabled,
                         :onclick =>
                            "if (this.checked) { $('#settings_commit_logtime_activity_id').removeAttr('disabled'); } else { $('#settings_commit_logtime_activity_id').attr('disabled', true); }"%></p>

<p><%= setting_select :commit_logtime_activity_id,
                      [[l(:label_default), 0]] +
                          TimeEntryActivity.shared.active.collect{|activity| [activity.name, activity.id.to_s]},
                      :disabled => !Setting.commit_logtime_enabled?%></p>
</fieldset>

<%= submit_tag l(:button_save) %>
<% end %>
